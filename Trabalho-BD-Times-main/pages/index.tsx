import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect, useState } from "react";
import { svgs } from "../assets";

import { Navbar } from "../components/Navbar";
import { TimesTitulosGraph } from "../components/graphs/TimesTitulosGraph";
import { ICampeonato, IDisputa, IJogador, ITime } from "../interfaces";

import styles from "../styles/Home.module.scss";
import { CampeonatosPremiacoes } from "../components/graphs/CampeonatosPremiacoes";
import { JogadoresValorGraph } from "../components/graphs/JogadoresValorPasse";
import { Nascimentos } from "../components/graphs/Nascimentos";
import executeQuery from "../lib/db";

const Home: NextPage = () => {
  const [times, setTimes] = useState<ITime[]>([]);
  const [campeonatos, setCampeonatos] = useState<ICampeonato[]>([]);
  const [jogadores, setJogadores] = useState<IJogador[]>([]);
  const [nascPerYear, setNascPerYear] = useState<any[]>([]);

  useEffect(() => {
    const getData = async () => {
      const res = await axios.post("/api/get-times", {});

      setTimes(res.data);
    };

    getData();
  }, []);

  useEffect(() => {
    const getData = async () => {
      const res = await axios.post("/api/get-campeonatos", {});

      setCampeonatos(res.data);
    };

    getData();
  }, []);

  useEffect(() => {
    const getData = async () => {
      const res = await axios.post("/api/get-jogadores", {});

      setJogadores(res.data);
    };

    getData();
  }, []);

  useEffect(() => {
    const getData = async () => {
      const res = await axios.post("/api/get-nascimentos-por-ano", {});

      setNascPerYear(res.data);
    };

    getData();
  }, []);

  console.log(process.env.NEXT_PUBLIC_MYSQL_DATABASE);

  return (
    <div className={styles.container}>
      <Head>
        <title>Sports</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <header> */}
      <h1 className={styles.title}>Sports</h1>
      {/* </header> */}

      <main className={styles.main}>
        {nascPerYear.length > 0 && (
          <>
            <h3>Nascimentos por Ano</h3>
            <Nascimentos
              data={nascPerYear}
              dimensions={{
                width: 600,
                height: 540,
                margin: {
                  top: 40,
                  right: 40,
                  bottom: 200,
                  left: 60,
                },
              }}
            />
          </>
        )}

        {times.length > 0 && (
          <>
            <h3>Times x Titulos</h3>
            <TimesTitulosGraph
              data={times}
              dimensions={{
                width: 600,
                height: 650,
                margin: {
                  top: 40,
                  right: 40,
                  bottom: 200,
                  left: 60,
                },
              }}
            />
          </>
        )}

        {campeonatos.length > 0 && (
          <>
            <h3>Campeonatos x Premiações</h3>
            <CampeonatosPremiacoes
              data={campeonatos}
              dimensions={{
                width: 600,
                height: 400,
                margin: {
                  top: 40,
                  right: 40,
                  bottom: 40,
                  left: 40,
                },
              }}
            />
          </>
        )}

        {jogadores.length > 0 && (
          <>
            <h3>Top 20 Jogadores com maior Valor Passe</h3>
            <div className={styles.legenda}>
              <svg height={40}>
                <circle cx={10} cy={20} r={10} fill="magenta" />
                <text y={27} x={25} stroke="black" strokeWidth={0.1}>
                  Mulheres
                </text>
                <circle cx={200} cy={20} r={10} fill="steelblue" />
                <text y={27} x={215} stroke="black" strokeWidth={0.1}>
                  Homens
                </text>
              </svg>
            </div>
            <JogadoresValorGraph
              data={jogadores
                .sort((a, b) => b.valor_passe - a.valor_passe)
                .slice(0, 20)}
              dimensions={{
                width: 600,
                height: 400,
                margin: {
                  top: 40,
                  right: 40,
                  bottom: 40,
                  left: 130,
                },
              }}
            />
          </>
        )}
      </main>
    </div>
  );
};

export default Home;

export async function getServerSideProps({ req, query }: any) {
  console.log(req);
  const protocol = req.headers["x-forwarded-proto"];
  const host = req.headers["x-forwarded-host"];
  const page = query.page || 1;
  const limit = query.limit || 9;

  const result: any = await executeQuery({
    query: `select * from tb_jogador;`,
    values: [],
  });

  console.log({ result });

  return { props: {} };
}
